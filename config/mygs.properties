gameserver.timezone = Pacific/Auckland

#
# ----------------------------
# Database Config's:
# ----------------------------

# This is the database url
# Set the timezone in gameserver.properties if you get an error during startup. It is needed to avoid timestamp errors during daylight savings clock change.
database.url = jdbc:mysql://192.168.0.123:3306/aion_beyond_gs?serverTimezone=${gameserver.timezone}&characterEncoding=UTF-8

# Database user
database.user = dev

# Database password
database.password = !Dev_123!

# Maximal amount of connections kept in connection pool
database.connectionpool.connections.max = 5

# Maximum wait time when getting a DB connection, before throwing a timeout error
database.connectionpool.timeout = 5000

#
# ----------------------------
# Network Config's:
# ----------------------------

# Address where Aion clients will attempt to connect to (format is host:port).
# The host part can be an IPv4 address or a host/domain name which resolves to an IPv4 address since the client does not support IPv6.
# By default, the connect address is the same as the socket address (if the host part is set to 0.0.0.0 the server will auto select the most suitable local
# IPv4 address and log it).
gameserver.network.client.connect_address = 192.168.0.100:7777

# Local address where GS will listen for Aion client connections (0.0.0.0 = bind any local IP)
gameserver.network.client.socket_address = 0.0.0.0:7777

# Address (host/domain name or IP) of the login server
gameserver.network.login.address = login:9014

# Id of this game server
gameserver.network.login.gsid = 1

# Password of this game server
gameserver.network.login.password = 1234

# Minimum required access level for accounts trying to connect (=maintenance mode)
gameserver.network.login.min_accesslevel = 0

# Maximum online players on the server
gameserver.network.login.max_players = 100

# Address (host/domain name or IP) of the chat server
gameserver.network.chat.address = chat:9021

# Password of this game server for chat server
gameserver.network.chat.password = 1234

# Number of extra threads dedicated only to read/write network data.
# Value < 1 means that acceptor thread will also handle read & write.
# Value > 0 means there will be x dedicated read/write threads + 1 acceptor.
gameserver.network.nio.threads = 1

# Number of threads (min) that will be used to execute client packets
gameserver.network.packet.processor.threads.min = 4

# Number of threads (max) that will be used to execute client packets
gameserver.network.packet.processor.threads.max = 4

# Threshold used to decide when packet processor thread should be killed
# It have effect only if min threads != max threads
gameserver.network.packet.processor.threshold.kill = 3

# Threshold used to decide when extra packet processor thread should be spawned
# It have effect only if min threads != max threads
gameserver.network.packet.processor.threshold.spawn = 50

# Enable/disable log messages for unknown packets received from the aion client
gameserver.network.logging.unknown_packets = false

# Enable/disable log messages for ignored aion client packets (due to invalid connection state)
gameserver.network.logging.ignored_packets = false

# Enable flood protector
gameserver.network.flood.connections = false

# Flood ms in tick
gameserver.network.flood.tick = 1000

# Short period
gameserver.network.flood.short.warn = 10
gameserver.network.flood.short.reject = 20
gameserver.network.flood.short.tick = 10

# Long period
gameserver.network.flood.long.warn = 30
gameserver.network.flood.long.reject = 60
gameserver.network.flood.long.tick = 60

#
# ----------------------------
# Rate config's:
# ----------------------------

# NOTE: All values can be comma separated int or float values.
#       This way you can define rates for any number of membership
#       types you want to support.
#       The index of each entry corresponds to one membership level.
#       Therefore "1, 1.5, 2" means membership 0 uses x1 rates,
#       membership 1 x1.5, membership 2 x2 and so on.
#
#       By default, this config contains rates for two membership
#       levels: 0 = Regular, 1 = Premium

# ----------------------------
# Crafting chances:
# ----------------------------
# Chance in percent to have a critical procraft (applied on first step)
# Default: 15.0, 30.0
gameserver.rates.crafting.crit_chances = 15.0, 30.0

# Chance in percent to have a combo procraft (applied on subsequent steps)
# Default: 25.0, 50.0
gameserver.rates.crafting.combo_crit_chances = 25.0, 50.0

# ----------------------------
# Enchantment chances:
# ----------------------------
# Base manastone chance in percent
# Default: 75.0, 75.0
gameserver.rates.manastone_chances = 75.0, 75.0

# Enchanting base chance in percent, if the stone exactly matches the item level and quality (will divert according to the difference)
# Default: 65.0, 65.0
gameserver.rates.enchantment_stone.base_chances = 65.0, 65.0

# Enchanting chance in percent if the item is amplified (this rate is fixed)
# Default: 50.0, 50.0
gameserver.rates.enchantment_stone.amplified_chances = 50.0, 50.0

# Tempering chance in percent (except for plumes)
# Default: 65.0, 65.0
gameserver.rates.tampering_chances = 65.0, 65.0

# ----------------------------
# Level XP rates:
# ----------------------------
# Solo PvE XP
# Default: 1.0, 2.0
gameserver.rates.xp.solo = 1.0, 2.0

# Group PvE XP
# Default: 1.0, 2.0
gameserver.rates.xp.group = 1.0, 2.0

# Quest XP
# Default: 1.0, 2.0
gameserver.rates.xp.quest = 1.0, 2.0

# Gathering XP
# Default: 1.0, 2.0
gameserver.rates.xp.gathering = 1.0, 2.0

# Crafting XP
# Default: 1.0, 2.0
gameserver.rates.xp.crafting = 1.0, 2.0

# PvP XP
# Default: 1.0, 2.0
gameserver.rates.xp.pvp = 1.0, 2.0

# ----------------------------
# Skill level XP rates:
# ----------------------------
# Gathering Skill XP
# Default: 1.0, 2.0
gameserver.rates.skill_xp.gathering = 1.0, 2.0

# Crafting Skill XP
# Default: 1.0, 2.0 
gameserver.rates.skill_xp.crafting = 1.0, 2.0

# ----------------------------
# AP rates:
# ----------------------------
# PvP AP Gain 
# Default: 1.0, 2.0
gameserver.rates.ap.pvp.gain = 1.0, 2.0

# PvP AP Loss 
# Default: 1.0, 1.0
gameserver.rates.ap.pvp.loss = 1.0, 1.0

# PvE AP
# Default: 1.0, 2.0
gameserver.rates.ap.pve = 1.0, 2.0

# Quest AP
# Default: 1.0, 2.0
gameserver.rates.ap.quest = 1.0, 2.0

# Dredgion AP
# Default: 1.0, 2.0
gameserver.rates.ap.dredgion = 1.0, 2.0

# ----------------------------
# GP rates:
# ----------------------------
# GP Gain 
# Default: 1.0, 2.0
gameserver.rates.gp.gain = 1.0, 2.0

# ----------------------------
# DP rates:
# ----------------------------
# PvE DP
# Default: 1.0, 2.0
gameserver.rates.dp.pve = 1.0, 2.0

# PvP DP
# Default: 1.0, 2.0
gameserver.rates.dp.pvp = 1.0, 2.0

# ----------------------------
# Quest Kinah rates:
# ----------------------------
# Regular
# Default: 1.0, 2.0
gameserver.rates.kinah.quest = 1.0, 2.0

# ----------------------------
# Drop rates:
# ----------------------------
# Drop
# Default: 1.0, 2.0
gameserver.rates.drop = 1.0, 2.0

# ----------------------------
# Gathering count rates:
# ----------------------------
# Gathering count multiplier
# Default: 1.0, 2.0
gameserver.rates.gathering.count = 1.0, 2.0

# ----------------------------
# PvP Arena reward rates:
# ----------------------------
# PvP Discipline Arena Reward rates
# Default: 1.0, 2.0
gameserver.rates.pvparena.discipline = 1.0, 2.0

# PvP Chaos Arena Reward rates
# Default: 1.0, 2.0
gameserver.rates.pvparena.chaos = 1.0, 2.0

# PvP Harmony Arena AP/Crucible Insignia rates
# Default: 1.0, 2.0
gameserver.rates.pvparena.harmony = 1.0, 2.0

# PvP Glory Arena AP/GP rates
# Default: 1.0, 2.0
gameserver.rates.pvparena.glory = 1.0, 2.0

# ----------------------------
# Sell Limit rates:
# ----------------------------
# Regular
# Default: 1.0, 2.0
gameserver.rates.sell_limit = 1.0, 2.0
